# https://stackoverflow.com/questions/38510694/how-to-add-album-art-to-mp3-file-using-python-3
# https://stackoverflow.com/questions/8948/accessing-mp3-metadata-with-python
# mechanicalsoup won't work because the html is generated by js -> selenium

# To execute : place mus.py in folder with each artists and cmd execute

# TODO : handle no album art, type check in artists_folder

import os
import eyed3

import urllib
import urllib.request

from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import Select
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

artists_folders = os.listdir()
artists_folders.remove('mus.py')

def download_img(artist, album):
	options = webdriver.ChromeOptions()
	options.add_argument("headless")

	driver = webdriver.Chrome(options=options)
	driver.get("https://bendodson.com/projects/itunes-artwork-finder/")

	select = Select(driver.find_element_by_name('entity'))
	select.select_by_value('album')

	query = driver.find_element_by_name("query")
	query.send_keys(artist + ' ' + album, Keys.RETURN)

	try:
		element = WebDriverWait(driver, 10).until(
			EC.presence_of_element_located((By.LINK_TEXT, "Standard Resolution"))
		)
	except TimeoutException:
		# No corresponding album
		print('')
	finally:
		print('')

	download_link = driver.find_elements_by_link_text('Standard Resolution')[0]
	src = download_link.get_attribute('href')

	data = urllib.request.urlretrieve(src, "img.jpg")

	driver.quit()

	return

for artist in artists_folders:
	albums_folders = os.listdir(artist + '/')
	for album in albums_folders:
		songs = os.listdir(artist + '/' + album + '/')
		audiofile = eyed3.load(artist + '/' + album + '/' + songs[0])
		art_name = audiofile.tag.artist
		alb_name = audiofile.tag.album

		download_img(art_name,alb_name)

		IMG_PATH = 'img.jpg'
		
		for song in songs:
			audiofile = eyed3.load(artist + '/' + album + '/' + song)
			audiofile.tag.images.set(3, open(IMG_PATH, 'rb').read(), 'image/jpeg')
			audiofile.tag.save(version=eyed3.id3.ID3_V2_3)

		os.remove(IMG_PATH)

